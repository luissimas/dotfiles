# Remap prefix
unbind C-b
set-option -g prefix C-g

# Setting the shell correctly
set -g default-shell $SHELL

# Setting default terminal
set -g default-terminal "screen-256color"

# Making esc work properly
set -s escape-time 0

# Reload config file
bind r source-file ~/.tmux.conf \; display-message "Tmux config reloaded!"

# Vim keybindings in copy mode
set-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Split panes using | and - and open them in the current directory
unbind '"'
unbind %
unbind c
unbind C-s
unbind C-x
bind c new-window -c "#{pane_current_path}"
bind C-x split-window -c "#{pane_current_path}"
bind C-s split-window -h -c "#{pane_current_path}"

# Toggle status line
bind b set-option status

# Automatically set window title
set-option -g automatic-rename on

# Move between windows with i and o
unbind i
unbind o
bind i previous-window
bind o next-window

# Start counting at 1 rather than 0
set -g base-index 1

# Pane borders
set -g pane-border-style fg=color0
set -g pane-active-border-style fg=color0

# Statusline options
set -g status-position bottom

# Sections
set -g status-left "#[bold,bg=color8,fg=terminal] #{session_name} "
set -g status-right "#[bg=color8]#(~/scripts/bar/battery.sh) %d/%m %H:%M "
set -g window-status-format "#[bg=terminal,fg=color15] #{window_name} "
set -g window-status-current-format "#[bold,bg=color15,fg=color0] #{window_name} "
set -g window-status-separator ""
set -g status-justify left
set -g status-left-length 50

# Colors
set -g status-style bg=terminal

# Pane switching and resizing using tmux.nvim
# See: https://github.com/aserowy/tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1
